{"failedCount":2,"prefixedPath":"classpath:ConduitApp\/feature\/Articles.feature","packageQualifiedName":"ConduitApp.feature.Articles","loopIndex":-1,"relativePath":"ConduitApp\/feature\/Articles.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:7\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5","millis":0.0,"status":"failed"},"step":{"background":true,"line":5,"prefix":"Given","index":0,"text":"url apiUrl"},"stepLog":"20:54:43.223 callSingle() will cache an exception\n20:54:43.223 << lock released, cached callSingle: classpath:helpers\/CreateToken.feature\n20:54:43.223 callSingle() cached result is an exception\n20:54:43.245 classpath:ConduitApp\/feature\/Articles.feature:5\nGiven url apiUrl\n>> classpath:ConduitApp\/feature\/Articles.feature:7\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\n","callResults":[{"prefixedPath":"classpath:helpers\/CreateToken.feature","loopIndex":-1,"callDepth":1,"description":"","resultDate":"2021-11-04 08:54:43 PM","durationMillis":367.0631,"callArg":{"apiUrl":"http:\/\/localhost:3000\/api\/","userEmail":"test@test.coma","userPassword":"test"},"failedCount":1,"packageQualifiedName":"helpers.CreateToken","relativePath":"helpers\/CreateToken.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":669600,"millis":0.6696,"status":"passed"},"step":{"line":4,"prefix":"Given","index":0,"text":"url apiUrl"},"stepLog":"20:54:42.801 karate.env system property was: null \n20:54:42.809 >> lock acquired, begin callSingle: classpath:helpers\/CreateToken.feature\n"},{"result":{"nanos":627700,"millis":0.6277,"status":"passed"},"step":{"line":5,"prefix":"Given","index":1,"text":"path 'users\/login'"}},{"result":{"nanos":36242000,"millis":36.242,"status":"passed"},"step":{"line":6,"prefix":"And","index":2,"text":"request {user: {email: \"#(userEmail)\", password: \"#(userPassword)\"}}"}},{"result":{"nanos":329250300,"millis":329.2503,"status":"passed"},"step":{"line":7,"prefix":"When","index":3,"text":"method Post"},"stepLog":"20:54:43.181 request:\n1 > POST http:\/\/localhost:3000\/api\/users\/login\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 53\n1 > Host: localhost:3000\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.1)\n1 > Accept-Encoding: gzip,deflate\n{\"user\":{\"email\":\"test@test.coma\",\"password\":\"test\"}}\n\n20:54:43.217 response time in milliseconds: 34\n1 < 422\n1 < X-Powered-By: Express\n1 < Access-Control-Allow-Origin: *\n1 < Vary: X-HTTP-Method-Override\n1 < Content-Type: application\/json; charset=utf-8\n1 < Content-Length: 45\n1 < ETag: W\/\"2d-SfWCRD7c3nhAhBtpH+Himg\"\n1 < Date: Thu, 04 Nov 2021 17:54:43 GMT\n1 < Connection: keep-alive\n1 < Keep-Alive: timeout=5\n{\"errors\":{\"email or password\":\"is invalid\"}}\n"},{"result":{"nanos":273500,"errorMessage":"status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8","millis":0.2735,"status":"failed"},"step":{"line":8,"prefix":"Then","index":4,"text":"status 200"},"stepLog":"20:54:43.221 classpath:helpers\/CreateToken.feature:8\nThen status 200\nstatus code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":9,"prefix":"*","index":5,"text":"def authToken = response.user.token"}}],"line":3,"description":"","durationMillis":367.0631,"failed":true,"error":"status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8","executorName":"main","name":"Create Token","startTime":1636048482841,"refId":"[1:3]","endTime":1636048483221,"exampleIndex":-1}],"name":"Create Token","passedCount":0}]},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:7\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:8","millis":0.0,"status":"failed"},"step":{"line":8,"prefix":"Given","index":0,"text":"path 'articles'"},"stepLog":"20:54:43.246 classpath:ConduitApp\/feature\/Articles.feature:8\nGiven path 'articles'\n>> classpath:ConduitApp\/feature\/Articles.feature:7\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:8\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:7\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:8\nclasspath:ConduitApp\/feature\/Articles.feature:9","millis":0.0,"status":"failed"},"step":{"line":9,"prefix":"And","index":1,"text":"request {article: {title: \"Article12\", description: \"Article12\", body: \"Article12\", tagList: [\"Article12\"]}}"},"stepLog":"20:54:43.246 classpath:ConduitApp\/feature\/Articles.feature:9\nAnd request {article: {title: \"Article12\", description: \"Article12\", body: \"Article12\", tagList: [\"Article12\"]}}\n>> classpath:ConduitApp\/feature\/Articles.feature:7\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:8\nclasspath:ConduitApp\/feature\/Articles.feature:9\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:7\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:8\nclasspath:ConduitApp\/feature\/Articles.feature:9\nclasspath:ConduitApp\/feature\/Articles.feature:10","millis":0.0,"status":"failed"},"step":{"line":10,"prefix":"When","index":2,"text":"method Post"},"stepLog":"20:54:43.246 classpath:ConduitApp\/feature\/Articles.feature:10\nWhen method Post\n>> classpath:ConduitApp\/feature\/Articles.feature:7\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:8\nclasspath:ConduitApp\/feature\/Articles.feature:9\nclasspath:ConduitApp\/feature\/Articles.feature:10\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:7\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:8\nclasspath:ConduitApp\/feature\/Articles.feature:9\nclasspath:ConduitApp\/feature\/Articles.feature:10\nclasspath:ConduitApp\/feature\/Articles.feature:11","millis":0.0,"status":"failed"},"step":{"line":11,"prefix":"Then","index":3,"text":"status 200"},"stepLog":"20:54:43.247 classpath:ConduitApp\/feature\/Articles.feature:11\nThen status 200\n>> classpath:ConduitApp\/feature\/Articles.feature:7\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:8\nclasspath:ConduitApp\/feature\/Articles.feature:9\nclasspath:ConduitApp\/feature\/Articles.feature:10\nclasspath:ConduitApp\/feature\/Articles.feature:11\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:7\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:8\nclasspath:ConduitApp\/feature\/Articles.feature:9\nclasspath:ConduitApp\/feature\/Articles.feature:10\nclasspath:ConduitApp\/feature\/Articles.feature:11\nclasspath:ConduitApp\/feature\/Articles.feature:12","millis":0.0,"status":"failed"},"step":{"line":12,"prefix":"And","index":4,"text":"match response.article.title == 'Article12'"},"stepLog":"20:54:43.247 classpath:ConduitApp\/feature\/Articles.feature:12\nAnd match response.article.title == 'Article12'\n>> classpath:ConduitApp\/feature\/Articles.feature:7\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:8\nclasspath:ConduitApp\/feature\/Articles.feature:9\nclasspath:ConduitApp\/feature\/Articles.feature:10\nclasspath:ConduitApp\/feature\/Articles.feature:11\nclasspath:ConduitApp\/feature\/Articles.feature:12\n"}],"line":7,"description":"","durationMillis":0.0,"failed":true,"error":">> classpath:ConduitApp\/feature\/Articles.feature:7\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:8\nclasspath:ConduitApp\/feature\/Articles.feature:9\nclasspath:ConduitApp\/feature\/Articles.feature:10\nclasspath:ConduitApp\/feature\/Articles.feature:11\nclasspath:ConduitApp\/feature\/Articles.feature:12","tags":["debug"],"executorName":"main","name":"Create a New Article","startTime":1636048482753,"refId":"[1:7]","endTime":1636048483247,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5","millis":0.0,"status":"failed"},"step":{"background":true,"line":5,"prefix":"Given","index":0,"text":"url apiUrl"},"stepLog":"20:54:43.283 karate.env system property was: null \n20:54:43.285 callSingle() cached result is an exception\n20:54:43.294 classpath:ConduitApp\/feature\/Articles.feature:5\nGiven url apiUrl\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15","millis":0.0,"status":"failed"},"step":{"line":15,"prefix":"Given","index":0,"text":"path 'articles'"},"stepLog":"20:54:43.295 classpath:ConduitApp\/feature\/Articles.feature:15\nGiven path 'articles'\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16","millis":0.0,"status":"failed"},"step":{"line":16,"prefix":"And","index":1,"text":"request {article: {title: \"ArticleToDelete\", description: \"ArticleToDelete\", body: \"ArticleToDelete\", tagList: [\"ArticleToDelete\"]}}"},"stepLog":"20:54:43.296 classpath:ConduitApp\/feature\/Articles.feature:16\nAnd request {article: {title: \"ArticleToDelete\", description: \"ArticleToDelete\", body: \"ArticleToDelete\", tagList: [\"ArticleToDelete\"]}}\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17","millis":0.0,"status":"failed"},"step":{"line":17,"prefix":"When","index":2,"text":"method Post"},"stepLog":"20:54:43.296 classpath:ConduitApp\/feature\/Articles.feature:17\nWhen method Post\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18","millis":0.0,"status":"failed"},"step":{"line":18,"prefix":"Then","index":3,"text":"status 200"},"stepLog":"20:54:43.297 classpath:ConduitApp\/feature\/Articles.feature:18\nThen status 200\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19","millis":0.0,"status":"failed"},"step":{"line":19,"prefix":"*","index":4,"text":"def articleId = response.article.slug"},"stepLog":"20:54:43.298 classpath:ConduitApp\/feature\/Articles.feature:19\n* def articleId = response.article.slug\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21","millis":0.0,"status":"failed"},"step":{"comments":["# получаем список статей и забираем slug созданной статьи"],"line":21,"prefix":"Given","index":5,"text":"path 'articles'"},"stepLog":"20:54:43.299 classpath:ConduitApp\/feature\/Articles.feature:21\nGiven path 'articles'\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22","millis":0.0,"status":"failed"},"step":{"line":22,"prefix":"Given","index":6,"text":"params { limit: 10, offset: 0 }"},"stepLog":"20:54:43.299 classpath:ConduitApp\/feature\/Articles.feature:22\nGiven params { limit: 10, offset: 0 }\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23","millis":0.0,"status":"failed"},"step":{"line":23,"prefix":"When","index":7,"text":"method Get"},"stepLog":"20:54:43.301 classpath:ConduitApp\/feature\/Articles.feature:23\nWhen method Get\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24","millis":0.0,"status":"failed"},"step":{"line":24,"prefix":"Then","index":8,"text":"status 200"},"stepLog":"20:54:43.301 classpath:ConduitApp\/feature\/Articles.feature:24\nThen status 200\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25","millis":0.0,"status":"failed"},"step":{"line":25,"prefix":"And","index":9,"text":"match response.articles[0].title == \"ArticleToDelete\""},"stepLog":"20:54:43.302 classpath:ConduitApp\/feature\/Articles.feature:25\nAnd match response.articles[0].title == \"ArticleToDelete\"\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27","millis":0.0,"status":"failed"},"step":{"comments":["# удаляем статью"],"line":27,"prefix":"Given","index":10,"text":"path 'articles', articleId"},"stepLog":"20:54:43.303 classpath:ConduitApp\/feature\/Articles.feature:27\nGiven path 'articles', articleId\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27\nclasspath:ConduitApp\/feature\/Articles.feature:28","millis":0.0,"status":"failed"},"step":{"line":28,"prefix":"When","index":11,"text":"method Delete"},"stepLog":"20:54:43.303 classpath:ConduitApp\/feature\/Articles.feature:28\nWhen method Delete\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27\nclasspath:ConduitApp\/feature\/Articles.feature:28\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27\nclasspath:ConduitApp\/feature\/Articles.feature:28\nclasspath:ConduitApp\/feature\/Articles.feature:29","millis":0.0,"status":"failed"},"step":{"line":29,"prefix":"Then","index":12,"text":"status 204"},"stepLog":"20:54:43.304 classpath:ConduitApp\/feature\/Articles.feature:29\nThen status 204\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27\nclasspath:ConduitApp\/feature\/Articles.feature:28\nclasspath:ConduitApp\/feature\/Articles.feature:29\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27\nclasspath:ConduitApp\/feature\/Articles.feature:28\nclasspath:ConduitApp\/feature\/Articles.feature:29\nclasspath:ConduitApp\/feature\/Articles.feature:31","millis":0.0,"status":"failed"},"step":{"comments":["# Проверяем, что в списке статей больше нету удаленной статьи"],"line":31,"prefix":"Given","index":13,"text":"path 'articles'"},"stepLog":"20:54:43.305 classpath:ConduitApp\/feature\/Articles.feature:31\nGiven path 'articles'\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27\nclasspath:ConduitApp\/feature\/Articles.feature:28\nclasspath:ConduitApp\/feature\/Articles.feature:29\nclasspath:ConduitApp\/feature\/Articles.feature:31\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27\nclasspath:ConduitApp\/feature\/Articles.feature:28\nclasspath:ConduitApp\/feature\/Articles.feature:29\nclasspath:ConduitApp\/feature\/Articles.feature:31\nclasspath:ConduitApp\/feature\/Articles.feature:32","millis":0.0,"status":"failed"},"step":{"line":32,"prefix":"Given","index":14,"text":"params { limit: 10, offset: 0 }"},"stepLog":"20:54:43.305 classpath:ConduitApp\/feature\/Articles.feature:32\nGiven params { limit: 10, offset: 0 }\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27\nclasspath:ConduitApp\/feature\/Articles.feature:28\nclasspath:ConduitApp\/feature\/Articles.feature:29\nclasspath:ConduitApp\/feature\/Articles.feature:31\nclasspath:ConduitApp\/feature\/Articles.feature:32\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27\nclasspath:ConduitApp\/feature\/Articles.feature:28\nclasspath:ConduitApp\/feature\/Articles.feature:29\nclasspath:ConduitApp\/feature\/Articles.feature:31\nclasspath:ConduitApp\/feature\/Articles.feature:32\nclasspath:ConduitApp\/feature\/Articles.feature:33","millis":0.0,"status":"failed"},"step":{"line":33,"prefix":"When","index":15,"text":"method Get"},"stepLog":"20:54:43.306 classpath:ConduitApp\/feature\/Articles.feature:33\nWhen method Get\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27\nclasspath:ConduitApp\/feature\/Articles.feature:28\nclasspath:ConduitApp\/feature\/Articles.feature:29\nclasspath:ConduitApp\/feature\/Articles.feature:31\nclasspath:ConduitApp\/feature\/Articles.feature:32\nclasspath:ConduitApp\/feature\/Articles.feature:33\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27\nclasspath:ConduitApp\/feature\/Articles.feature:28\nclasspath:ConduitApp\/feature\/Articles.feature:29\nclasspath:ConduitApp\/feature\/Articles.feature:31\nclasspath:ConduitApp\/feature\/Articles.feature:32\nclasspath:ConduitApp\/feature\/Articles.feature:33\nclasspath:ConduitApp\/feature\/Articles.feature:34","millis":0.0,"status":"failed"},"step":{"line":34,"prefix":"Then","index":16,"text":"status 200"},"stepLog":"20:54:43.307 classpath:ConduitApp\/feature\/Articles.feature:34\nThen status 200\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27\nclasspath:ConduitApp\/feature\/Articles.feature:28\nclasspath:ConduitApp\/feature\/Articles.feature:29\nclasspath:ConduitApp\/feature\/Articles.feature:31\nclasspath:ConduitApp\/feature\/Articles.feature:32\nclasspath:ConduitApp\/feature\/Articles.feature:33\nclasspath:ConduitApp\/feature\/Articles.feature:34\n"},{"result":{"nanos":0,"errorMessage":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27\nclasspath:ConduitApp\/feature\/Articles.feature:28\nclasspath:ConduitApp\/feature\/Articles.feature:29\nclasspath:ConduitApp\/feature\/Articles.feature:31\nclasspath:ConduitApp\/feature\/Articles.feature:32\nclasspath:ConduitApp\/feature\/Articles.feature:33\nclasspath:ConduitApp\/feature\/Articles.feature:34\nclasspath:ConduitApp\/feature\/Articles.feature:35","millis":0.0,"status":"failed"},"step":{"line":35,"prefix":"And","index":17,"text":"match response.articles[0].title != \"ArticleToDelete\""},"stepLog":"20:54:43.308 classpath:ConduitApp\/feature\/Articles.feature:35\nAnd match response.articles[0].title != \"ArticleToDelete\"\n>> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27\nclasspath:ConduitApp\/feature\/Articles.feature:28\nclasspath:ConduitApp\/feature\/Articles.feature:29\nclasspath:ConduitApp\/feature\/Articles.feature:31\nclasspath:ConduitApp\/feature\/Articles.feature:32\nclasspath:ConduitApp\/feature\/Articles.feature:33\nclasspath:ConduitApp\/feature\/Articles.feature:34\nclasspath:ConduitApp\/feature\/Articles.feature:35\n"}],"line":14,"description":"","durationMillis":0.0,"failed":true,"error":">> classpath:ConduitApp\/feature\/Articles.feature:14\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     apiUrl: 'http:\/\/localhost:3000\/api\/'\n09:   }\n10:   if (env == 'dev') {\n11:     config.userEmail = 'test@test.coma'\n12:     config.userPassword = 'test' \n13:   }\n14:   if (env == 'e2e') {\n15:     \/\/ customize\n16:   }\n17: \n18:   var accessToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })\n20: \n21:   return config;\n22: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http:\/\/localhost:3000\/api\/users\/login, response: \n{\"errors\":{\"email or password\":\"is invalid\"}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:18)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:ConduitApp\/feature\/Articles.feature:5\nclasspath:ConduitApp\/feature\/Articles.feature:15\nclasspath:ConduitApp\/feature\/Articles.feature:16\nclasspath:ConduitApp\/feature\/Articles.feature:17\nclasspath:ConduitApp\/feature\/Articles.feature:18\nclasspath:ConduitApp\/feature\/Articles.feature:19\nclasspath:ConduitApp\/feature\/Articles.feature:21\nclasspath:ConduitApp\/feature\/Articles.feature:22\nclasspath:ConduitApp\/feature\/Articles.feature:23\nclasspath:ConduitApp\/feature\/Articles.feature:24\nclasspath:ConduitApp\/feature\/Articles.feature:25\nclasspath:ConduitApp\/feature\/Articles.feature:27\nclasspath:ConduitApp\/feature\/Articles.feature:28\nclasspath:ConduitApp\/feature\/Articles.feature:29\nclasspath:ConduitApp\/feature\/Articles.feature:31\nclasspath:ConduitApp\/feature\/Articles.feature:32\nclasspath:ConduitApp\/feature\/Articles.feature:33\nclasspath:ConduitApp\/feature\/Articles.feature:34\nclasspath:ConduitApp\/feature\/Articles.feature:35","tags":["debug"],"executorName":"main","name":"Crete and Delete existed article","startTime":1636048483276,"refId":"[2:14]","endTime":1636048483308,"exampleIndex":-1}],"callDepth":0,"name":"Article","description":"","resultDate":"2021-11-04 08:54:43 PM","durationMillis":0.0,"passedCount":0}