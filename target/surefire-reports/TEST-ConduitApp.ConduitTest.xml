<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="ConduitApp.ConduitTest" time="5.993" tests="2" errors="0" skipped="0" failures="2">
  <properties>
    <property name="java.specification.version" value="16"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1251"/>
    <property name="java.class.path" value="C:\Users\Aleksey\Desktop\karate practice\karatetests\target\test-classes;C:\Users\Aleksey\Desktop\karate practice\karatetests\target\classes;C:\Users\Aleksey\.m2\repository\com\intuit\karate\karate-junit5\1.1.0\karate-junit5-1.1.0.jar;C:\Users\Aleksey\.m2\repository\com\intuit\karate\karate-core\1.1.0\karate-core-1.1.0.jar;C:\Users\Aleksey\.m2\repository\org\graalvm\js\js-scriptengine\21.2.0\js-scriptengine-21.2.0.jar;C:\Users\Aleksey\.m2\repository\org\graalvm\sdk\graal-sdk\21.2.0\graal-sdk-21.2.0.jar;C:\Users\Aleksey\.m2\repository\org\graalvm\js\js\21.2.0\js-21.2.0.jar;C:\Users\Aleksey\.m2\repository\org\graalvm\regex\regex\21.2.0\regex-21.2.0.jar;C:\Users\Aleksey\.m2\repository\org\graalvm\truffle\truffle-api\21.2.0\truffle-api-21.2.0.jar;C:\Users\Aleksey\.m2\repository\com\ibm\icu\icu4j\69.1\icu4j-69.1.jar;C:\Users\Aleksey\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\Aleksey\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\Aleksey\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Aleksey\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;C:\Users\Aleksey\.m2\repository\com\jayway\jsonpath\json-path\2.6.0\json-path-2.6.0.jar;C:\Users\Aleksey\.m2\repository\net\minidev\json-smart\2.4.7\json-smart-2.4.7.jar;C:\Users\Aleksey\.m2\repository\net\minidev\accessors-smart\2.4.7\accessors-smart-2.4.7.jar;C:\Users\Aleksey\.m2\repository\org\ow2\asm\asm\9.1\asm-9.1.jar;C:\Users\Aleksey\.m2\repository\info\cukes\cucumber-java\1.2.5\cucumber-java-1.2.5.jar;C:\Users\Aleksey\.m2\repository\info\cukes\cucumber-core\1.2.5\cucumber-core-1.2.5.jar;C:\Users\Aleksey\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Aleksey\.m2\repository\de\siegmar\fastcsv\2.0.0\fastcsv-2.0.0.jar;C:\Users\Aleksey\.m2\repository\info\picocli\picocli\4.6.1\picocli-4.6.1.jar;C:\Users\Aleksey\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.7.2\junit-jupiter-api-5.7.2.jar;C:\Users\Aleksey\.m2\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\Aleksey\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Aleksey\.m2\repository\org\junit\platform\junit-platform-commons\1.7.2\junit-platform-commons-1.7.2.jar;C:\Users\Aleksey\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.7.2\junit-jupiter-engine-5.7.2.jar;C:\Users\Aleksey\.m2\repository\org\junit\platform\junit-platform-engine\1.7.2\junit-platform-engine-1.7.2.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Moscow"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="16"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="RU"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-16.0.1\bin"/>
    <property name="sun.java.command" value="C:\Users\Aleksey\AppData\Local\Temp\surefire9993610723490643224\surefirebooter9847155122509964097.jar C:\Users\Aleksey\AppData\Local\Temp\surefire9993610723490643224 2021-11-04T20-54-40_154-jvmRun1 surefire12308801099468309012tmp surefire_011920971827587625726tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\Aleksey\Desktop\karate practice\karatetests\target\test-classes;C:\Users\Aleksey\Desktop\karate practice\karatetests\target\classes;C:\Users\Aleksey\.m2\repository\com\intuit\karate\karate-junit5\1.1.0\karate-junit5-1.1.0.jar;C:\Users\Aleksey\.m2\repository\com\intuit\karate\karate-core\1.1.0\karate-core-1.1.0.jar;C:\Users\Aleksey\.m2\repository\org\graalvm\js\js-scriptengine\21.2.0\js-scriptengine-21.2.0.jar;C:\Users\Aleksey\.m2\repository\org\graalvm\sdk\graal-sdk\21.2.0\graal-sdk-21.2.0.jar;C:\Users\Aleksey\.m2\repository\org\graalvm\js\js\21.2.0\js-21.2.0.jar;C:\Users\Aleksey\.m2\repository\org\graalvm\regex\regex\21.2.0\regex-21.2.0.jar;C:\Users\Aleksey\.m2\repository\org\graalvm\truffle\truffle-api\21.2.0\truffle-api-21.2.0.jar;C:\Users\Aleksey\.m2\repository\com\ibm\icu\icu4j\69.1\icu4j-69.1.jar;C:\Users\Aleksey\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\Aleksey\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\Aleksey\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Aleksey\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;C:\Users\Aleksey\.m2\repository\com\jayway\jsonpath\json-path\2.6.0\json-path-2.6.0.jar;C:\Users\Aleksey\.m2\repository\net\minidev\json-smart\2.4.7\json-smart-2.4.7.jar;C:\Users\Aleksey\.m2\repository\net\minidev\accessors-smart\2.4.7\accessors-smart-2.4.7.jar;C:\Users\Aleksey\.m2\repository\org\ow2\asm\asm\9.1\asm-9.1.jar;C:\Users\Aleksey\.m2\repository\info\cukes\cucumber-java\1.2.5\cucumber-java-1.2.5.jar;C:\Users\Aleksey\.m2\repository\info\cukes\cucumber-core\1.2.5\cucumber-core-1.2.5.jar;C:\Users\Aleksey\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Aleksey\.m2\repository\de\siegmar\fastcsv\2.0.0\fastcsv-2.0.0.jar;C:\Users\Aleksey\.m2\repository\info\picocli\picocli\4.6.1\picocli-4.6.1.jar;C:\Users\Aleksey\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.7.2\junit-jupiter-api-5.7.2.jar;C:\Users\Aleksey\.m2\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\Aleksey\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Aleksey\.m2\repository\org\junit\platform\junit-platform-commons\1.7.2\junit-platform-commons-1.7.2.jar;C:\Users\Aleksey\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.7.2\junit-jupiter-engine-5.7.2.jar;C:\Users\Aleksey\.m2\repository\org\junit\platform\junit-platform-engine\1.7.2\junit-platform-engine-1.7.2.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Aleksey"/>
    <property name="user.language" value="ru"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2021-04-20"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-16.0.1"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\Aleksey\Desktop\karate practice\karatetests"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="karate.options" value="--tags @debug"/>
    <property name="surefire.real.class.path" value="C:\Users\Aleksey\AppData\Local\Temp\surefire9993610723490643224\surefirebooter9847155122509964097.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="16.0.1+9-24"/>
    <property name="user.name" value="Aleksey"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\Aleksey\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\Aleksey\AppData\Local\Temp\"/>
    <property name="java.version" value="16.0.1"/>
    <property name="user.dir" value="C:\Users\Aleksey\Desktop\karate practice\karatetests"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-16.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\nodejs\;C:\Program Files\OpenSSL-Win64\bin;C:\Program Files\Git\cmd;C:\Users\Aleksey\AppData\Local\Microsoft\WindowsApps;C:\Users\Aleksey\AppData\Roaming\npm;C:\Users\Aleksey\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files (x86)\mitmproxy\bin;C:\Program Files\OpenSSL-Win64\bin;C:\Program Files\maven\bin;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="16.0.1+9-24"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="60.0"/>
  </properties>
  <testcase name="testAll[1][1]" classname="ConduitApp.ConduitTest" time="1.57">
    <failure message="&gt;&gt; classpath:ConduitApp/feature/Articles.feature:7&#10;&gt;&gt; karate-config.js failed&#10;&gt;&gt; js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     apiUrl: &apos;http://localhost:3000/api/&apos;&#10;09:   }&#10;10:   if (env == &apos;dev&apos;) {&#10;11:     config.userEmail = &apos;test@test.coma&apos;&#10;12:     config.userPassword = &apos;test&apos; &#10;13:   }&#10;14:   if (env == &apos;e2e&apos;) {&#10;15:     // customize&#10;16:   }&#10;17: &#10;18:   var accessToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;19:   karate.configure(&apos;headers&apos;, { Authorization: &apos;Token &apos; + accessToken })&#10;20: &#10;21:   return config;&#10;22: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:&quot;is invalid&quot;}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:18)&#10;&#10;js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     apiUrl: &apos;http://localhost:3000/api/&apos;&#10;09:   }&#10;10:   if (env == &apos;dev&apos;) {&#10;11:     config.userEmail = &apos;test@test.coma&apos;&#10;12:     config.userPassword = &apos;test&apos; &#10;13:   }&#10;14:   if (env == &apos;e2e&apos;) {&#10;15:     // customize&#10;16:   }&#10;17: &#10;18:   var accessToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;19:   karate.configure(&apos;headers&apos;, { Authorization: &apos;Token &apos; + accessToken })&#10;20: &#10;21:   return config;&#10;22: }&#10;&lt;&lt;&lt;&lt;&#10;com.intuit.karate.KarateException: js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     apiUrl: &apos;http://localhost:3000/api/&apos;&#10;09:   }&#10;10:   if (env == &apos;dev&apos;) {&#10;11:     config.userEmail = &apos;test@test.coma&apos;&#10;12:     config.userPassword = &apos;test&apos; &#10;13:   }&#10;14:   if (env == &apos;e2e&apos;) {&#10;15:     // customize&#10;16:   }&#10;17: &#10;18:   var accessToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;19:   karate.configure(&apos;headers&apos;, { Authorization: &apos;Token &apos; + accessToken })&#10;20: &#10;21:   return config;&#10;22: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:&quot;is invalid&quot;}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:18)&#10;&#10;- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)&#10;- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)&#10;- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)&#10;- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)&#10;- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)&#10;- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)&#10;- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)&#10;&#10;classpath:ConduitApp/feature/Articles.feature:5&#10;classpath:ConduitApp/feature/Articles.feature:8&#10;classpath:ConduitApp/feature/Articles.feature:9&#10;classpath:ConduitApp/feature/Articles.feature:10&#10;classpath:ConduitApp/feature/Articles.feature:11&#10;classpath:ConduitApp/feature/Articles.feature:12" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
>> classpath:ConduitApp/feature/Articles.feature:7
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:8
classpath:ConduitApp/feature/Articles.feature:9
classpath:ConduitApp/feature/Articles.feature:10
classpath:ConduitApp/feature/Articles.feature:11
classpath:ConduitApp/feature/Articles.feature:12
]]></failure>
    <system-out><![CDATA[20:54:41.453 [main] INFO  com.intuit.karate.Runner - using system property 'karate.options': --tags @debug
20:54:41.843 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
20:54:42.798 [main] INFO  com.intuit.karate - karate.env system property was: null 
20:54:42.809 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:helpers/CreateToken.feature
20:54:43.181 [main] DEBUG com.intuit.karate - request:
1 > POST http://localhost:3000/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 53
1 > Host: localhost:3000
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/16.0.1)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"test@test.coma","password":"test"}}

20:54:43.217 [main] DEBUG com.intuit.karate - response time in milliseconds: 34
1 < 422
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Vary: X-HTTP-Method-Override
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 45
1 < ETag: W/"2d-SfWCRD7c3nhAhBtpH+Himg"
1 < Date: Thu, 04 Nov 2021 17:54:43 GMT
1 < Connection: keep-alive
1 < Keep-Alive: timeout=5
{"errors":{"email or password":"is invalid"}}
20:54:43.221 [main] ERROR com.intuit.karate - classpath:helpers/CreateToken.feature:8
Then status 200
status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
20:54:43.223 [main] WARN  com.intuit.karate - callSingle() will cache an exception
20:54:43.223 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:helpers/CreateToken.feature
20:54:43.223 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
20:54:43.245 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:5
Given url apiUrl
>> classpath:ConduitApp/feature/Articles.feature:7
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
20:54:43.245 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:8
Given path 'articles'
>> classpath:ConduitApp/feature/Articles.feature:7
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:8
20:54:43.246 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:9
And request {article: {title: "Article12", description: "Article12", body: "Article12", tagList: ["Article12"]}}
>> classpath:ConduitApp/feature/Articles.feature:7
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:8
classpath:ConduitApp/feature/Articles.feature:9
20:54:43.246 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:10
When method Post
>> classpath:ConduitApp/feature/Articles.feature:7
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:8
classpath:ConduitApp/feature/Articles.feature:9
classpath:ConduitApp/feature/Articles.feature:10
20:54:43.246 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:11
Then status 200
>> classpath:ConduitApp/feature/Articles.feature:7
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:8
classpath:ConduitApp/feature/Articles.feature:9
classpath:ConduitApp/feature/Articles.feature:10
classpath:ConduitApp/feature/Articles.feature:11
20:54:43.247 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:12
And match response.article.title == 'Article12'
>> classpath:ConduitApp/feature/Articles.feature:7
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:8
classpath:ConduitApp/feature/Articles.feature:9
classpath:ConduitApp/feature/Articles.feature:10
classpath:ConduitApp/feature/Articles.feature:11
classpath:ConduitApp/feature/Articles.feature:12
]]></system-out>
  </testcase>
  <testcase name="testAll[1][2]" classname="ConduitApp.ConduitTest" time="2.614">
    <failure message="&gt;&gt; classpath:ConduitApp/feature/Articles.feature:14&#10;&gt;&gt; karate-config.js failed&#10;&gt;&gt; js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     apiUrl: &apos;http://localhost:3000/api/&apos;&#10;09:   }&#10;10:   if (env == &apos;dev&apos;) {&#10;11:     config.userEmail = &apos;test@test.coma&apos;&#10;12:     config.userPassword = &apos;test&apos; &#10;13:   }&#10;14:   if (env == &apos;e2e&apos;) {&#10;15:     // customize&#10;16:   }&#10;17: &#10;18:   var accessToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;19:   karate.configure(&apos;headers&apos;, { Authorization: &apos;Token &apos; + accessToken })&#10;20: &#10;21:   return config;&#10;22: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:&quot;is invalid&quot;}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:18)&#10;&#10;js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     apiUrl: &apos;http://localhost:3000/api/&apos;&#10;09:   }&#10;10:   if (env == &apos;dev&apos;) {&#10;11:     config.userEmail = &apos;test@test.coma&apos;&#10;12:     config.userPassword = &apos;test&apos; &#10;13:   }&#10;14:   if (env == &apos;e2e&apos;) {&#10;15:     // customize&#10;16:   }&#10;17: &#10;18:   var accessToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;19:   karate.configure(&apos;headers&apos;, { Authorization: &apos;Token &apos; + accessToken })&#10;20: &#10;21:   return config;&#10;22: }&#10;&lt;&lt;&lt;&lt;&#10;com.intuit.karate.KarateException: js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     apiUrl: &apos;http://localhost:3000/api/&apos;&#10;09:   }&#10;10:   if (env == &apos;dev&apos;) {&#10;11:     config.userEmail = &apos;test@test.coma&apos;&#10;12:     config.userPassword = &apos;test&apos; &#10;13:   }&#10;14:   if (env == &apos;e2e&apos;) {&#10;15:     // customize&#10;16:   }&#10;17: &#10;18:   var accessToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;19:   karate.configure(&apos;headers&apos;, { Authorization: &apos;Token &apos; + accessToken })&#10;20: &#10;21:   return config;&#10;22: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:&quot;is invalid&quot;}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:18)&#10;&#10;- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)&#10;- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)&#10;- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)&#10;- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)&#10;- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)&#10;- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)&#10;- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)&#10;&#10;classpath:ConduitApp/feature/Articles.feature:5&#10;classpath:ConduitApp/feature/Articles.feature:15&#10;classpath:ConduitApp/feature/Articles.feature:16&#10;classpath:ConduitApp/feature/Articles.feature:17&#10;classpath:ConduitApp/feature/Articles.feature:18&#10;classpath:ConduitApp/feature/Articles.feature:19&#10;classpath:ConduitApp/feature/Articles.feature:21&#10;classpath:ConduitApp/feature/Articles.feature:22&#10;classpath:ConduitApp/feature/Articles.feature:23&#10;classpath:ConduitApp/feature/Articles.feature:24&#10;classpath:ConduitApp/feature/Articles.feature:25&#10;classpath:ConduitApp/feature/Articles.feature:27&#10;classpath:ConduitApp/feature/Articles.feature:28&#10;classpath:ConduitApp/feature/Articles.feature:29&#10;classpath:ConduitApp/feature/Articles.feature:31&#10;classpath:ConduitApp/feature/Articles.feature:32&#10;classpath:ConduitApp/feature/Articles.feature:33&#10;classpath:ConduitApp/feature/Articles.feature:34&#10;classpath:ConduitApp/feature/Articles.feature:35" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
classpath:ConduitApp/feature/Articles.feature:18
classpath:ConduitApp/feature/Articles.feature:19
classpath:ConduitApp/feature/Articles.feature:21
classpath:ConduitApp/feature/Articles.feature:22
classpath:ConduitApp/feature/Articles.feature:23
classpath:ConduitApp/feature/Articles.feature:24
classpath:ConduitApp/feature/Articles.feature:25
classpath:ConduitApp/feature/Articles.feature:27
classpath:ConduitApp/feature/Articles.feature:28
classpath:ConduitApp/feature/Articles.feature:29
classpath:ConduitApp/feature/Articles.feature:31
classpath:ConduitApp/feature/Articles.feature:32
classpath:ConduitApp/feature/Articles.feature:33
classpath:ConduitApp/feature/Articles.feature:34
classpath:ConduitApp/feature/Articles.feature:35
]]></failure>
    <system-out><![CDATA[20:54:43.282 [main] INFO  com.intuit.karate - karate.env system property was: null 
20:54:43.284 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
20:54:43.292 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:5
Given url apiUrl
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
20:54:43.294 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:15
Given path 'articles'
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
20:54:43.295 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:16
And request {article: {title: "ArticleToDelete", description: "ArticleToDelete", body: "ArticleToDelete", tagList: ["ArticleToDelete"]}}
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
20:54:43.296 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:17
When method Post
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
20:54:43.297 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:18
Then status 200
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
classpath:ConduitApp/feature/Articles.feature:18
20:54:43.298 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:19
* def articleId = response.article.slug
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
classpath:ConduitApp/feature/Articles.feature:18
classpath:ConduitApp/feature/Articles.feature:19
20:54:43.298 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:21
Given path 'articles'
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
classpath:ConduitApp/feature/Articles.feature:18
classpath:ConduitApp/feature/Articles.feature:19
classpath:ConduitApp/feature/Articles.feature:21
20:54:43.299 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:22
Given params { limit: 10, offset: 0 }
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
classpath:ConduitApp/feature/Articles.feature:18
classpath:ConduitApp/feature/Articles.feature:19
classpath:ConduitApp/feature/Articles.feature:21
classpath:ConduitApp/feature/Articles.feature:22
20:54:43.300 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:23
When method Get
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
classpath:ConduitApp/feature/Articles.feature:18
classpath:ConduitApp/feature/Articles.feature:19
classpath:ConduitApp/feature/Articles.feature:21
classpath:ConduitApp/feature/Articles.feature:22
classpath:ConduitApp/feature/Articles.feature:23
20:54:43.301 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:24
Then status 200
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
classpath:ConduitApp/feature/Articles.feature:18
classpath:ConduitApp/feature/Articles.feature:19
classpath:ConduitApp/feature/Articles.feature:21
classpath:ConduitApp/feature/Articles.feature:22
classpath:ConduitApp/feature/Articles.feature:23
classpath:ConduitApp/feature/Articles.feature:24
20:54:43.302 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:25
And match response.articles[0].title == "ArticleToDelete"
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
classpath:ConduitApp/feature/Articles.feature:18
classpath:ConduitApp/feature/Articles.feature:19
classpath:ConduitApp/feature/Articles.feature:21
classpath:ConduitApp/feature/Articles.feature:22
classpath:ConduitApp/feature/Articles.feature:23
classpath:ConduitApp/feature/Articles.feature:24
classpath:ConduitApp/feature/Articles.feature:25
20:54:43.302 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:27
Given path 'articles', articleId
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
classpath:ConduitApp/feature/Articles.feature:18
classpath:ConduitApp/feature/Articles.feature:19
classpath:ConduitApp/feature/Articles.feature:21
classpath:ConduitApp/feature/Articles.feature:22
classpath:ConduitApp/feature/Articles.feature:23
classpath:ConduitApp/feature/Articles.feature:24
classpath:ConduitApp/feature/Articles.feature:25
classpath:ConduitApp/feature/Articles.feature:27
20:54:43.303 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:28
When method Delete
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
classpath:ConduitApp/feature/Articles.feature:18
classpath:ConduitApp/feature/Articles.feature:19
classpath:ConduitApp/feature/Articles.feature:21
classpath:ConduitApp/feature/Articles.feature:22
classpath:ConduitApp/feature/Articles.feature:23
classpath:ConduitApp/feature/Articles.feature:24
classpath:ConduitApp/feature/Articles.feature:25
classpath:ConduitApp/feature/Articles.feature:27
classpath:ConduitApp/feature/Articles.feature:28
20:54:43.303 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:29
Then status 204
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
classpath:ConduitApp/feature/Articles.feature:18
classpath:ConduitApp/feature/Articles.feature:19
classpath:ConduitApp/feature/Articles.feature:21
classpath:ConduitApp/feature/Articles.feature:22
classpath:ConduitApp/feature/Articles.feature:23
classpath:ConduitApp/feature/Articles.feature:24
classpath:ConduitApp/feature/Articles.feature:25
classpath:ConduitApp/feature/Articles.feature:27
classpath:ConduitApp/feature/Articles.feature:28
classpath:ConduitApp/feature/Articles.feature:29
20:54:43.304 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:31
Given path 'articles'
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
classpath:ConduitApp/feature/Articles.feature:18
classpath:ConduitApp/feature/Articles.feature:19
classpath:ConduitApp/feature/Articles.feature:21
classpath:ConduitApp/feature/Articles.feature:22
classpath:ConduitApp/feature/Articles.feature:23
classpath:ConduitApp/feature/Articles.feature:24
classpath:ConduitApp/feature/Articles.feature:25
classpath:ConduitApp/feature/Articles.feature:27
classpath:ConduitApp/feature/Articles.feature:28
classpath:ConduitApp/feature/Articles.feature:29
classpath:ConduitApp/feature/Articles.feature:31
20:54:43.305 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:32
Given params { limit: 10, offset: 0 }
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
classpath:ConduitApp/feature/Articles.feature:18
classpath:ConduitApp/feature/Articles.feature:19
classpath:ConduitApp/feature/Articles.feature:21
classpath:ConduitApp/feature/Articles.feature:22
classpath:ConduitApp/feature/Articles.feature:23
classpath:ConduitApp/feature/Articles.feature:24
classpath:ConduitApp/feature/Articles.feature:25
classpath:ConduitApp/feature/Articles.feature:27
classpath:ConduitApp/feature/Articles.feature:28
classpath:ConduitApp/feature/Articles.feature:29
classpath:ConduitApp/feature/Articles.feature:31
classpath:ConduitApp/feature/Articles.feature:32
20:54:43.305 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:33
When method Get
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
classpath:ConduitApp/feature/Articles.feature:18
classpath:ConduitApp/feature/Articles.feature:19
classpath:ConduitApp/feature/Articles.feature:21
classpath:ConduitApp/feature/Articles.feature:22
classpath:ConduitApp/feature/Articles.feature:23
classpath:ConduitApp/feature/Articles.feature:24
classpath:ConduitApp/feature/Articles.feature:25
classpath:ConduitApp/feature/Articles.feature:27
classpath:ConduitApp/feature/Articles.feature:28
classpath:ConduitApp/feature/Articles.feature:29
classpath:ConduitApp/feature/Articles.feature:31
classpath:ConduitApp/feature/Articles.feature:32
classpath:ConduitApp/feature/Articles.feature:33
20:54:43.306 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:34
Then status 200
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
classpath:ConduitApp/feature/Articles.feature:18
classpath:ConduitApp/feature/Articles.feature:19
classpath:ConduitApp/feature/Articles.feature:21
classpath:ConduitApp/feature/Articles.feature:22
classpath:ConduitApp/feature/Articles.feature:23
classpath:ConduitApp/feature/Articles.feature:24
classpath:ConduitApp/feature/Articles.feature:25
classpath:ConduitApp/feature/Articles.feature:27
classpath:ConduitApp/feature/Articles.feature:28
classpath:ConduitApp/feature/Articles.feature:29
classpath:ConduitApp/feature/Articles.feature:31
classpath:ConduitApp/feature/Articles.feature:32
classpath:ConduitApp/feature/Articles.feature:33
classpath:ConduitApp/feature/Articles.feature:34
20:54:43.307 [main] ERROR com.intuit.karate - classpath:ConduitApp/feature/Articles.feature:35
And match response.articles[0].title != "ArticleToDelete"
>> classpath:ConduitApp/feature/Articles.feature:14
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     apiUrl: 'http://localhost:3000/api/'
09:   }
10:   if (env == 'dev') {
11:     config.userEmail = 'test@test.coma'
12:     config.userPassword = 'test' 
13:   }
14:   if (env == 'e2e') {
15:     // customize
16:   }
17: 
18:   var accessToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
19:   karate.configure('headers', { Authorization: 'Token ' + accessToken })
20: 
21:   return config;
22: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 422, expected: 200, response time in milliseconds: 34, url: http://localhost:3000/api/users/login, response: 
{"errors":{"email or password":"is invalid"}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:18)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:ConduitApp/feature/Articles.feature:5
classpath:ConduitApp/feature/Articles.feature:15
classpath:ConduitApp/feature/Articles.feature:16
classpath:ConduitApp/feature/Articles.feature:17
classpath:ConduitApp/feature/Articles.feature:18
classpath:ConduitApp/feature/Articles.feature:19
classpath:ConduitApp/feature/Articles.feature:21
classpath:ConduitApp/feature/Articles.feature:22
classpath:ConduitApp/feature/Articles.feature:23
classpath:ConduitApp/feature/Articles.feature:24
classpath:ConduitApp/feature/Articles.feature:25
classpath:ConduitApp/feature/Articles.feature:27
classpath:ConduitApp/feature/Articles.feature:28
classpath:ConduitApp/feature/Articles.feature:29
classpath:ConduitApp/feature/Articles.feature:31
classpath:ConduitApp/feature/Articles.feature:32
classpath:ConduitApp/feature/Articles.feature:33
classpath:ConduitApp/feature/Articles.feature:34
classpath:ConduitApp/feature/Articles.feature:35
---------------------------------------------------------
feature: classpath:ConduitApp/feature/Articles.feature
scenarios:  2 | passed:  0 | failed:  2 | time: 0,0000
---------------------------------------------------------

]]></system-out>
  </testcase>
</testsuite>